import tkinter as tk
from tkinter import ttk, messagebox
import mysql.connector

# Function to connect to MySQL Database
def connect_db():
    try:
        global conn, cursor
        conn = mysql.connector.connect(
            host="localhost",
            user="Rajan",
            password="your_password",
            database="your_database"
        )
        cursor = conn.cursor()
        messagebox.showinfo("Connection Status", "Connected to Database")
    except mysql.connector.Error as err:
        messagebox.showerror("Error", f"Error connecting to Database: {err}")

# Function to insert data into 'brands' table
def insert_brand():
    try:
        bid = entry_bid.get()
        bname = entry_bname.get()
        cursor.execute("INSERT INTO brands (bid, bname) VALUES (%s, %s)", (bid, bname))
        conn.commit()
        messagebox.showinfo("Insert Status", "Brand inserted successfully!")
    except mysql.connector.Error as err:
        messagebox.showerror("Error", f"Error inserting data: {err}")

# Function to fetch data from 'brands' table and display it
def fetch_brands():
    try:
        cursor.execute("SELECT * FROM brands")
        records = cursor.fetchall()
        listbox.delete(0, tk.END)  # Clear existing data in listbox
        for row in records:
            listbox.insert(tk.END, f"ID: {row[0]}, Name: {row[1]}")
    except mysql.connector.Error as err:
        messagebox.showerror("Error", f"Error fetching data: {err}")

# Function to close the database connection
def close_connection():
    try:
        cursor.close()
        conn.close()
        messagebox.showinfo("Connection Status", "Disconnected from Database")
    except:
        pass

# Tkinter UI setup
root = tk.Tk()
root.title("Inventory Management System")
root.geometry("400x400")
root.configure(bg="#F0F8FF")

# Add style for ttk widgets
style = ttk.Style()
style.configure("TButton", font=("Helvetica", 10), padding=5)
style.configure("TLabel", font=("Helvetica", 10), background="#F0F8FF")
style.configure("TEntry", padding=5)

# Header label
header = ttk.Label(root, text="Inventory Management System", font=("Helvetica", 14, "bold"))
header.grid(row=0, column=0, columnspan=2, padx=10, pady=(10, 20))

# Connect button
btn_connect = ttk.Button(root, text="Connect to Database", command=connect_db)
btn_connect.grid(row=1, column=0, columnspan=2, padx=10, pady=10)

# Labels and entries for inserting into 'brands'
ttk.Label(root, text="Brand ID:").grid(row=2, column=0, padx=10, pady=5, sticky="e")
entry_bid = ttk.Entry(root, width=20)
entry_bid.grid(row=2, column=1, padx=10, pady=5)

ttk.Label(root, text="Brand Name:").grid(row=3, column=0, padx=10, pady=5, sticky="e")
entry_bname = ttk.Entry(root, width=20)
entry_bname.grid(row=3, column=1, padx=10, pady=5)

btn_insert = ttk.Button(root, text="Insert Brand", command=insert_brand)
btn_insert.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

# Listbox with scrollbar to display fetched data
listbox_frame = tk.Frame(root, bg="#F0F8FF")
listbox_frame.grid(row=5, column=0, columnspan=2, padx=10, pady=10)
listbox_scroll = tk.Scrollbar(listbox_frame, orient="vertical")
listbox = tk.Listbox(listbox_frame, width=45, height=8, yscrollcommand=listbox_scroll.set, font=("Helvetica", 10))
listbox_scroll.config(command=listbox.yview)
listbox.grid(row=0, column=0)
listbox_scroll.grid(row=0, column=1, sticky="ns")

btn_fetch = ttk.Button(root, text="Fetch Brands", command=fetch_brands)
btn_fetch.grid(row=6, column=0, columnspan=2, padx=10, pady=10)

# Disconnect button
btn_disconnect = ttk.Button(root, text="Disconnect Database", command=close_connection)
btn_disconnect.grid(row=7, column=0, columnspan=2, padx=10, pady=20)

root.mainloop()
